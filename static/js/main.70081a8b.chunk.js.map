{"version":3,"sources":["reducers/index.js","store/index.js","actions/index.js","components/ContactForm.js","components/EditContact.js","components/DeleteContact.js","components/ContactCard.js","components/EditContactForm.js","components/ContactList.js","components/OpenFormButton.js","App.js","index.js"],"names":["initialState","contactList","rootReducer","state","action","type","contactExists","some","contact","email","payload","Object","assign","concat","filter","editingContact","newContact","editing","map","date","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","toggleEditContact","connect","addContact","useState","name","firstLine","secondLine","town","county","postcode","phone","setNewContact","error","setError","handleChange","e","target","value","onSubmit","preventDefault","length","item","find","Date","now","htmlFor","onChange","id","placeholder","required","className","onClick","deleteContact","ContactCard","updateContact","updatedContact","setUpdatedContact","useEffect","index","OpenFormButton","setDisplayForm","buttonText","displayForm","prevState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70081a8b.chunk.js","sourcesContent":["const initialState = {\r\n\tcontactList: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_CONTACT':\r\n\t\t\t//check for existing email already in state\r\n\t\t\tconst contactExists = state.contactList.some(\r\n\t\t\t\t(contact) => contact.email === action.payload.email\r\n\t\t\t);\r\n\t\t\tif (!contactExists) {\r\n\t\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\t\tcontactList: state.contactList.concat(action.payload),\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontactList: state.contactList.filter(\r\n\t\t\t\t\t(contact) => contact.email !== action.payload.contact\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\tcase 'TOGGLE_EDIT_CONTACT':\r\n\t\t\tconst { editingContact } = action.payload;\r\n\t\t\tconst newContact = {\r\n\t\t\t\t...editingContact,\r\n\t\t\t\tediting: !editingContact.editing,\r\n\t\t\t};\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontactList: state.contactList.map((contact) =>\r\n\t\t\t\t\tcontact.date === editingContact.date ? newContact : contact\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\tcase 'UPDATE_CONTACT':\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontactList: state.contactList.map((contact) =>\r\n\t\t\t\t\tcontact.date === action.payload.date ? action.payload : contact\r\n\t\t\t\t),\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers());\r\n\r\nexport default store;\r\n","//action creator\r\nexport const selectedAddress = (address) => {\r\n\treturn {\r\n\t\ttype: 'ADDRESS_SELECTED',\r\n\t\tpayload: address,\r\n\t};\r\n};\r\n\r\nexport const addContact = (newContact) => {\r\n\treturn {\r\n\t\ttype: 'ADD_CONTACT',\r\n\t\tpayload: newContact,\r\n\t};\r\n};\r\n\r\nexport const deleteContact = (contact) => {\r\n\treturn {\r\n\t\ttype: 'DELETE_CONTACT',\r\n\t\tpayload: contact,\r\n\t};\r\n};\r\n\r\nexport const toggleEditContact = (editingContact) => {\r\n\treturn {\r\n\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\tpayload: editingContact,\r\n\t};\r\n};\r\n\r\nexport const updateContact = (updatedContact) => {\r\n\treturn {\r\n\t\ttype: 'UPDATE_CONTACT',\r\n\t\tpayload: updatedContact,\r\n\t};\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../actions';\r\n\r\nfunction ContactForm({ addContact, contactList }) {\r\n  const [contact, setNewContact] = useState({\r\n    name: '',\r\n    firstLine: '',\r\n    secondLine: '',\r\n    town: '',\r\n    county: '',\r\n    postcode: '',\r\n    email: '',\r\n    phone: '',\r\n    date: '',\r\n  });\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewContact({ ...contact, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //check if there is a contact with entered email\r\n    if (contactList.length > 0) {\r\n      const item = contactList.find((item) => item.email === contact.email);\r\n      //if entered email exists then return an error message\r\n      if (item.email === contact.email)\r\n        setError(\r\n          `A contact with the email ${item.email} is already in your contact list`\r\n        );\r\n    }\r\n\r\n    //send contact to store\r\n    addContact({ ...contact, date: Date.now(), editing: false });\r\n\r\n    setNewContact({\r\n      name: '',\r\n      firstLine: '',\r\n      secondLine: '',\r\n      town: '',\r\n      county: '',\r\n      postcode: '',\r\n      email: '',\r\n      phone: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input\r\n        value={contact.name}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"name\"\r\n        required\r\n      />\r\n      <fieldset>\r\n        <legend>Address</legend>\r\n        <input\r\n          value={contact.firstLine}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"firstLine\"\r\n          placeholder=\"first line\"\r\n        />\r\n        <input\r\n          value={contact.secondLine}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"secondLine\"\r\n          placeholder=\"second line\"\r\n        />\r\n        <input\r\n          value={contact.town}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"town\"\r\n          placeholder=\"town\"\r\n        />\r\n        <input\r\n          value={contact.county}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"county\"\r\n          placeholder=\"county\"\r\n        />\r\n        <input\r\n          value={contact.postcode}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"postcode\"\r\n          placeholder=\"postcode\"\r\n        />\r\n      </fieldset>\r\n\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input\r\n        value={contact.email}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"email\"\r\n        required\r\n      />\r\n      <label htmlFor=\"phone\">Phone number</label>\r\n      <input\r\n        value={contact.phone}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        id=\"phone\"\r\n        name=\"phone\"\r\n        placeholder=\"phone\"\r\n      />\r\n      {error && <p className=\"text-red-600 mb-2\">{error}</p>}\r\n      <button className=\"btn\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    contactList: state.contactList,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { addContact })(ContactForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleEditContact } from '../actions';\r\n\r\nfunction EditContact({ toggleEditContact, contact }) {\r\n\tfunction handleClick() {\r\n\t\ttoggleEditContact({\r\n\t\t\ttype: 'TOGGLE_EDIT_CONTACT',\r\n\t\t\teditingContact: contact,\r\n\t\t});\r\n\t}\r\n\treturn <button onClick={handleClick}>Edit</button>;\r\n}\r\n\r\nexport default connect(null, { toggleEditContact })(EditContact);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../actions';\r\n\r\nfunction DeleteContact({ deleteContact, contact }) {\r\n  function handleClick() {\r\n    deleteContact({\r\n      type: 'DELETE_CONTACT',\r\n      contact: contact.email,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <button onClick={handleClick} className=\"bg-red-500 hover:bg-red-700\">\r\n      Delete\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteContact })(DeleteContact);\r\n","import React from 'react';\r\nimport EditContact from './EditContact';\r\nimport DeleteContact from './DeleteContact';\r\n\r\n//destructure props and render\r\nfunction ContactCard({ contact }) {\r\n  return (\r\n    <div className=\"container flex flex-col max-w-xs p-4 rounded border border-gray-300\">\r\n      <h3>{contact.name}</h3>\r\n      <address className=\"align-left\">\r\n        <p>\r\n          {contact.firstLine}\r\n          <br />\r\n          {contact.secondLine}\r\n          <br />\r\n          {contact.town}\r\n          <br />\r\n          {contact.county}\r\n          <br />\r\n          {contact.postcode}\r\n          <br />\r\n        </p>\r\n      </address>\r\n      <p>\r\n        {contact.email}\r\n        <br />\r\n        {contact.phone}\r\n      </p>\r\n      <div className=\"w-full flex justify-evenly\">\r\n        <EditContact contact={contact} />\r\n        <DeleteContact contact={contact} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateContact, toggleEditContact } from '../actions';\r\n\r\nfunction EditContactForm({ contact, updateContact, toggleEditContact }) {\r\n  const [updatedContact, setUpdatedContact] = useState({\r\n    name: '',\r\n    firstLine: '',\r\n    secondLine: '',\r\n    town: '',\r\n    county: '',\r\n    postcode: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUpdatedContact(contact);\r\n  }, [contact]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedContact({ ...updatedContact, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateContact(updatedContact);\r\n    toggleEditContact({\r\n      type: 'TOGGLE_EDIT_CONTACT',\r\n      editingContact: updatedContact,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    toggleEditContact({\r\n      type: 'TOGGLE_EDIT_CONTACT',\r\n      editingContact: contact,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        value={updatedContact.name}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"name\"\r\n        required\r\n      />\r\n      <input\r\n        value={updatedContact.firstLine}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"firstLine\"\r\n        placeholder=\"first line\"\r\n      />\r\n      <input\r\n        value={updatedContact.secondLine}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"secondLine\"\r\n        placeholder=\"second line\"\r\n      />\r\n      <input\r\n        value={updatedContact.town}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"town\"\r\n        placeholder=\"town\"\r\n      />\r\n      <input\r\n        value={updatedContact.county}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"county\"\r\n        placeholder=\"county\"\r\n      />\r\n      <input\r\n        value={updatedContact.postcode}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"postcode\"\r\n        placeholder=\"postcode\"\r\n      />\r\n      <input\r\n        value={updatedContact.email}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"email\"\r\n        required\r\n      />\r\n      <input\r\n        value={updatedContact.phone}\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        placeholder=\"phone\"\r\n      />\r\n      <div className=\"w-full flex justify-evenly\">\r\n        <button type=\"submit\">Update</button>\r\n        <button onClick={handleCancel}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default connect(null, { updateContact, toggleEditContact })(\r\n  EditContactForm\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactCard from './ContactCard';\r\nimport EditContactForm from './EditContactForm';\r\n\r\nfunction ContactList({ contactList }) {\r\n  return (\r\n    <div className=\"container flex flex-col justify-center items-center sm:flex-row gap-2\">\r\n      {contactList.length > 0 ? (\r\n        contactList.map((contact, index) =>\r\n          contact.editing ? (\r\n            <EditContactForm key={index} contact={contact} />\r\n          ) : (\r\n            <ContactCard key={index} contact={contact} />\r\n          )\r\n        )\r\n      ) : (\r\n        <p>No Contacts!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactList: state.contactList,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\n\r\nfunction OpenFormButton({ setDisplayForm, displayForm }) {\r\n  const buttonText = displayForm ? `Close Form` : `Add New Contact`;\r\n\r\n  const handleClick = () => {\r\n    setDisplayForm((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <button onClick={handleClick} className=\"btn mb-6 w-48\">\r\n      {buttonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default OpenFormButton;\r\n","import React, { useState } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport OpenFormButton from './components/OpenFormButton';\r\n\r\nfunction App() {\r\n  const [displayForm, setDisplayForm] = useState(false);\r\n  return (\r\n    <div className=\"container flex flex-col justify-center items-center mx-auto py-4 px-2\">\r\n      <header className=\"w-full mb-4 flex justify-center\">\r\n        <h1>Address Book</h1>\r\n      </header>\r\n      <main className=\"container flex flex-col justify-center items-center py-2\">\r\n        <OpenFormButton\r\n          displayForm={displayForm}\r\n          setDisplayForm={setDisplayForm}\r\n        />\r\n        {displayForm && <ContactForm />}\r\n\r\n        <ContactList />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}